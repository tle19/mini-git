Q: Is one sorting algorithm always faster than another?
A: It seems that the WipingBubbleSort is almost always faster than BubbleSort regardless of the inputs.

Q: Above we said that BubbleSort, WipingBubbleSort, and InsertionSort each had the same Theta(N^2) asymptotic time complexity. How can you explain the differences in the plots for these three algorithms?
A: While the plots may have shown that BubbleShort, WipingBubbleShort, and InsertionShort are different with the same Theta(N^2) asymptotic time complexity. That time complexity was only the worst case meaning that InsertionSort could perform better overall given a smaller input.

Q: What information can we gain from empirical analysis of algorithms which might not be as noticeable in asymptotical bounds?
A: We can see how the functions perform over a larger span of time and input, to better determine the most efficient function. Asymptotical bounds only tell us worst case, average case, and best case. However, in functionality, it will hard to reach a best case, so graphing and plotting the function will give us a better representation of the more efficient function.

Q: For any given sorting algorithm, does increasing the array size always mean the sorting takes longer?
A: Yes, because take BubbleSort for example, as you increase the array size, it takes longer to do a forward pass through the array each time it iterates through.

Q: How does changing nrepeats change the plot?
A: increasing nrepeats gives us a more accurate representation of the data as it makes the lines straighter  and more akin to a best line of fit.

Q: Is your plot the exact same as your partner's plot, even with the same values of ntrials, by, and nrepeats?
A: No, running the program multiple times will see us a result in which the values slightly change, even with the same values of ntrials and nrepeats.

Q: Optional: Look at the source code for BubbleSorter to WipingBubbleSorter. After looking at the plots, can you intuitively explain why WipingBubbleSorter is usually 2x as fast as BubbleSorter? (Hint: Consider the immobility of some elements when the swapping passes are single directional (i.e. only going forward), and how this "Wiping" strategy helps deal with that issue.) Can you come up with an example that shows the difference in runtime?
A: